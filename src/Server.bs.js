// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Express = require("bs-express/src/Express.bs.js");

var Express$1 = Express;

var App_use = Express.App.use;

var App_useWithMany = Express.App.useWithMany;

var App_useOnPath = Express.App.useOnPath;

var App_useOnPathWithMany = Express.App.useOnPathWithMany;

var App_get = Express.App.get;

var App_getWithMany = Express.App.getWithMany;

var App_options = Express.App.options;

var App_optionsWithMany = Express.App.optionsWithMany;

var App_param = Express.App.param;

var App_post = Express.App.post;

var App_postWithMany = Express.App.postWithMany;

var App_put = Express.App.put;

var App_putWithMany = Express.App.putWithMany;

var App_patch = Express.App.patch;

var App_patchWithMany = Express.App.patchWithMany;

var App_delete = Express.App.$$delete;

var App_deleteWithMany = Express.App.deleteWithMany;

var App_make = Express.App.make;

var App_asMiddleware = Express.App.asMiddleware;

var App_useRouter = Express.App.useRouter;

var App_useRouterOnPath = Express.App.useRouterOnPath;

var App_listen = Express.App.listen;

var App_disable = Express.App.disable;

var App_set = Express.App.set;

var App = {
  use: App_use,
  useWithMany: App_useWithMany,
  useOnPath: App_useOnPath,
  useOnPathWithMany: App_useOnPathWithMany,
  get: App_get,
  getWithMany: App_getWithMany,
  options: App_options,
  optionsWithMany: App_optionsWithMany,
  param: App_param,
  post: App_post,
  postWithMany: App_postWithMany,
  put: App_put,
  putWithMany: App_putWithMany,
  patch: App_patch,
  patchWithMany: App_patchWithMany,
  $$delete: App_delete,
  deleteWithMany: App_deleteWithMany,
  make: App_make,
  asMiddleware: App_asMiddleware,
  useRouter: App_useRouter,
  useRouterOnPath: App_useRouterOnPath,
  listen: App_listen,
  disable: App_disable,
  set: App_set
};

var Router_use = Express.Router.use;

var Router_useWithMany = Express.Router.useWithMany;

var Router_useOnPath = Express.Router.useOnPath;

var Router_useOnPathWithMany = Express.Router.useOnPathWithMany;

var Router_get = Express.Router.get;

var Router_getWithMany = Express.Router.getWithMany;

var Router_options = Express.Router.options;

var Router_optionsWithMany = Express.Router.optionsWithMany;

var Router_param = Express.Router.param;

var Router_post = Express.Router.post;

var Router_postWithMany = Express.Router.postWithMany;

var Router_put = Express.Router.put;

var Router_putWithMany = Express.Router.putWithMany;

var Router_patch = Express.Router.patch;

var Router_patchWithMany = Express.Router.patchWithMany;

var Router_delete = Express.Router.$$delete;

var Router_deleteWithMany = Express.Router.deleteWithMany;

var Router_make = Express.Router.make;

var Router_asMiddleware = Express.Router.asMiddleware;

var Router = {
  use: Router_use,
  useWithMany: Router_useWithMany,
  useOnPath: Router_useOnPath,
  useOnPathWithMany: Router_useOnPathWithMany,
  get: Router_get,
  getWithMany: Router_getWithMany,
  options: Router_options,
  optionsWithMany: Router_optionsWithMany,
  param: Router_param,
  post: Router_post,
  postWithMany: Router_postWithMany,
  put: Router_put,
  putWithMany: Router_putWithMany,
  patch: Router_patch,
  patchWithMany: Router_patchWithMany,
  $$delete: Router_delete,
  deleteWithMany: Router_deleteWithMany,
  make: Router_make,
  asMiddleware: Router_asMiddleware
};

var Request_params = Express.$$Request.params;

var Request_asJsonObject = Express.$$Request.asJsonObject;

var Request_baseUrl = Express.$$Request.baseUrl;

var Request_bodyJSON = Express.$$Request.bodyJSON;

var Request_bodyRaw = Express.$$Request.bodyRaw;

var Request_bodyText = Express.$$Request.bodyText;

var Request_bodyURLEncoded = Express.$$Request.bodyURLEncoded;

var Request_cookies = Express.$$Request.cookies;

var Request_signedCookies = Express.$$Request.signedCookies;

var Request_hostname = Express.$$Request.hostname;

var Request_ip = Express.$$Request.ip;

var Request_fresh = Express.$$Request.fresh;

var Request_stale = Express.$$Request.stale;

var Request_methodRaw = Express.$$Request.methodRaw;

var Request_httpMethod = Express.$$Request.httpMethod;

var Request_originalUrl = Express.$$Request.originalUrl;

var Request_path = Express.$$Request.path;

var Request_protocol = Express.$$Request.protocol;

var Request_secure = Express.$$Request.secure;

var Request_query = Express.$$Request.query;

var Request_accepts = Express.$$Request.accepts;

var Request_acceptsCharsets = Express.$$Request.acceptsCharsets;

var Request_get = Express.$$Request.get;

var Request_xhr = Express.$$Request.xhr;

var $$Request = {
  params: Request_params,
  asJsonObject: Request_asJsonObject,
  baseUrl: Request_baseUrl,
  bodyJSON: Request_bodyJSON,
  bodyRaw: Request_bodyRaw,
  bodyText: Request_bodyText,
  bodyURLEncoded: Request_bodyURLEncoded,
  cookies: Request_cookies,
  signedCookies: Request_signedCookies,
  hostname: Request_hostname,
  ip: Request_ip,
  fresh: Request_fresh,
  stale: Request_stale,
  methodRaw: Request_methodRaw,
  httpMethod: Request_httpMethod,
  originalUrl: Request_originalUrl,
  path: Request_path,
  protocol: Request_protocol,
  secure: Request_secure,
  query: Request_query,
  accepts: Request_accepts,
  acceptsCharsets: Request_acceptsCharsets,
  get: Request_get,
  xhr: Request_xhr
};

var Response_StatusCode = Express.$$Response.StatusCode;

var Response_sendFile = Express.$$Response.sendFile;

var Response_sendString = Express.$$Response.sendString;

var Response_sendJson = Express.$$Response.sendJson;

var Response_sendBuffer = Express.$$Response.sendBuffer;

var Response_sendArray = Express.$$Response.sendArray;

var Response_sendRawStatus = Express.$$Response.sendRawStatus;

var Response_sendStatus = Express.$$Response.sendStatus;

var Response_rawStatus = Express.$$Response.rawStatus;

var Response_status = Express.$$Response.status;

var Response_cookie = Express.$$Response.cookie;

var Response_clearCookie = Express.$$Response.clearCookie;

var Response_json = Express.$$Response.json;

var Response_redirectCode = Express.$$Response.redirectCode;

var Response_redirect = Express.$$Response.redirect;

var Response_setHeader = Express.$$Response.setHeader;

var Response_setType = Express.$$Response.setType;

var Response_setLinks = Express.$$Response.setLinks;

var Response_end_ = Express.$$Response.end_;

var Response_render = Express.$$Response.render;

var $$Response = {
  StatusCode: Response_StatusCode,
  sendFile: Response_sendFile,
  sendString: Response_sendString,
  sendJson: Response_sendJson,
  sendBuffer: Response_sendBuffer,
  sendArray: Response_sendArray,
  sendRawStatus: Response_sendRawStatus,
  sendStatus: Response_sendStatus,
  rawStatus: Response_rawStatus,
  status: Response_status,
  cookie: Response_cookie,
  clearCookie: Response_clearCookie,
  json: Response_json,
  redirectCode: Response_redirectCode,
  redirect: Response_redirect,
  setHeader: Response_setHeader,
  setType: Response_setType,
  setLinks: Response_setLinks,
  end_: Response_end_,
  render: Response_render
};

var Handler;

var Middleware;

var ID;

var Log;

var Decode;

var Env;

var Pg;

var DBTable;

var HttpClient;

exports.Express = Express$1;
exports.App = App;
exports.Router = Router;
exports.$$Request = $$Request;
exports.$$Response = $$Response;
exports.Handler = Handler;
exports.Middleware = Middleware;
exports.ID = ID;
exports.Log = Log;
exports.Decode = Decode;
exports.Env = Env;
exports.Pg = Pg;
exports.DBTable = DBTable;
exports.HttpClient = HttpClient;
/* Express Not a pure module */
